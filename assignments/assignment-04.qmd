---
title: "Assignment 4"
subtitle: "Tuning parameters selection with cross-validation"
date: 10-20-2023
format: html
editor: visual
---

::: callout-important
**Due date: 11:59pm on Sunday, 29 October 2023.**
:::

::: callout-note
Use the corresponding invite link in [this google doc](https://docs.google.com/document/d/1XTO7obXEr2Yxllxk48wnZ5e49ptPGMsMyl40KEZDGRg/edit?usp=sharing) (accessible with your EPFL account) to accept the assignment. Then go to the [course GitHub organization](https://github.com/MATH-517) and locate the repo titled `ae-4-YOUR_GITHUB_USERNAME` to get started.
:::


Consider a subset of `mcycle` data (of the `MASS` package)[^1] for `times` $\leq 40$ and use cross-validation to select

-  the polynomial degree of $\textcolor{red}{p}$ from candidate values $\{1,2,3\}$
-  the bandwidth $\textcolor{red}{h}$ from candidate values $\{3,4,\ldots,15\}$

for a local polynomial smoother[^2] of the form

$$ \underset{\boldsymbol{\beta} \in \mathbb{R}^{\textcolor{red}{p}+1}}{\operatorname{argmin}} \sum_{i=1}^n [Y_i - \sum_{j=0}^\textcolor{red}{p} \beta_j(x)\left(x_i-x\right)^j]^2 K\left(\frac{X_i-x}{\textcolor{red}{h}}\right),$$

with $K(x)=\frac{3}{4}(1 - x^2)$ if $|x|\leq 1$ and $0$ otherwise is the Epanechnikov kernel.


```{r, echo=F, fig.align='center',out.width="70%"}
library(MASS)
library(ggplot2)
data(mcycle)
mcycle <- mcycle[mcycle$times <= 40, ]

ggplot() +
    theme_bw() +
    geom_point(data=mcycle, aes(x=times, y=accel)) +
    labs(x="time after impact (ms)", y="acceleration (g)", title="Simulated Motorcycle Accident Data")
```

**Notes**:

-  Use your own visualizations to verify your progress
-  You may run into issues for large $p$ and small $h$ if you use small number of folds.
-  Beware of how your points are ordered.




[^1]: available [on Kaggle](https://www.kaggle.com/datasets/ukveteran/data-from-a-simulated-motorcycle-accident), through the R library `MASS` or through `RDataset.jl`
[^2]: for `R` you can use  [`locpol`](https://www.rdocumentation.org/packages/locpol/versions/0.8.0/topics/locpol), for `Python` [`localreg`](https://github.com/sigvaldm/localreg), and for `Julia` you can try [`KernSmooth`](https://github.com/lendle/KernSmooth.jl) or just call `locpol` via [`RCall`](https://juliainterop.github.io/RCall.jl/stable/). 